app armadajs2024 {
  wasp: {
    version: "^0.15.0"
  },
  title: "armadajs-2024",




  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {},
      gitHub: {},
      // google: {},
    },
    onAuthFailedRedirectTo: "/login",
  },




  client: {
    rootComponent: import { Layout } from "@src/Layout",
  },
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import { MainPage } from "@src/MainPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { LoginPage } from "@src/auth/LoginPage"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import { SignupPage } from "@src/auth/SignupPage"
}

query getTasks {
  // We specify the JS implementation of our query (which is an async JS function)
  fn: import { getTasks } from "@src/tasks/operations",
  // We tell Wasp that this query is doing something with the `Task` entity. With that, Wasp will
  // automatically refresh the results of this query when tasks change.
  entities: [Task]
}

action createTask {
  fn: import { createTask } from "@src/tasks/operations",
  entities: [Task]
}

action updateTask {
  fn: import { updateTask } from "@src/tasks/operations",
  entities: [Task]
}

action deleteTasks {
  fn: import { deleteTasks } from "@src/tasks/operations",
  entities: [Task],
}
